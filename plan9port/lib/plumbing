# to update: cat $home/lib/plumbing | 9p write plumb/rules

editor = acme

# epub files
data matches '([a-zA-Z¡-￿0-9_\-./\(\)&][ a-zA-Z¡-￿0-9_\-./\(\)&]*)\.[Ee][Pp][Uu][Bb]'
arg isfile $0
plumb to epub
plumb start rc -c 'xdg-open '''$file''' || open '''$file''''

# ms office files (docx?, xlsx?, pptx?)
data matches '([a-zA-Z¡-￿0-9_\-./\(\)&][ a-zA-Z¡-￿0-9_\-./\(\)&]*)\.([Dd][Oo][Cc][Xx]?|[Xx][Ll][Ss][Xx]?|[Pp][Pp][Tt][Xx]?)'
arg isfile $0
plumb to office
plumb start rc -c 'xdg-open '''$file''' || open '''$file''''

# pdf files
data matches '([a-zA-Z¡-￿0-9_\-./\(\)&][ a-zA-Z¡-￿0-9_\-./\(\)&]*)\.[Pp][Dd][Ff]'
arg isfile $0
plumb to pdf
plumb start rc -c 'xdg-open '''$file''' || open '''$file''''

# python errors
type is text
data matches ' *File "([a-zA-Z¡-￿0-9_\-./]+)", line ([0-9]+).*'
arg isfile $1
data set $file
attr add addr=$2
plumb to edit
plumb client $editor

# python enhancement proposal (PEP)
type is text
data matches 'PEP-?([0-9]+)'
plumb start rc -c 'printf ''https://www.python.org/dev/peps/pep-%04d/'' '$1'/ | plumb -i'

# request for comments (RFC)
type is text
data matches 'RFC[\-:]?([0-9]+)'
plumb to web
plumb start web https://www.rfc-editor.org/info/rfc$1

# digital object identifer (DOI)
type is text
data matches '10.[0-9][0-9][0-9][0-9][0-9]?[0-9]?[0-9]?[0-9]?[0-9]?/[\-\._;\(\)/:a-zA-Z0-9]+'
data set https://doi.org/$0
plumb to web
plumb start web $data

# git commits, sourced from https://alexkarle.com/blog/plan9-acme-git-gui.html
type is text
data matches '[a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9]+'
plumb start rc -c 'git -C '$wdir' show '$0' >[2=1] | plumb -i -d edit -a ''action=showdata filename=/'$wdir'/'$0''''

# financial instrument global identifier (OpenFIGI)
type is text
data matches 'BBG[0-9A-Z][0-9A-Z][0-9A-Z][0-9A-Z][0-9A-Z][0-9A-Z][0-9A-Z][0-9A-Z][0-9]'
data set https://www.openfigi.com/id/$0
plumb to web
plumb start web $data

# stock ticker
type is text
data matches 'ticker://([0-9A-Z.]+)'
data set https://finance.yahoo.com/quote/$1/
plumb to web
plumb start web $data

# morningstar.com search
type is text
data matches 'morningstar://([0-9A-Za-z\-.]+)'
data set https://www.morningstar.com/search?query=$1
plumb to web
plumb start web $data

# sec.gov/edgar entity search
type is text
data matches 'edgar://([0-9A-Za-z \-.]+)'
data set https://www.sec.gov/edgar/search/#/entityName=$1
plumb to web
plumb start web $data

# day YYYY-MM-DD or YYYYMMDD in Google Calendar
type is text
data matches '(20[0-9][0-9])[\-/]?(0[1-9]|1[0-2])[\-/]?(0[1-9]|[1-2][0-9]|3[01])'
data set https://calendar.google.com/calendar/u/0/r/day/$1/$2/$3
plumb to web
plumb start web $data

# month YYYY-MM or YYYYMM in Google Calendar
type is text
data matches '(20[0-9][0-9])[\-/]?(0[1-9]|1[0-2])'
data set https://calendar.google.com/calendar/u/0/r/month/$1/$2/01
plumb to web
plumb start web $data

# gemini using [lagrange](https://github.com/skyjake/lagrange)
type is text
data matches 'gemini://[^ ]+'
plumb to gemini
plumb start lagrange $0

# view twitter through [nitter](https://github.com/zedeus/nitter)
type is text
data matches 'https?://twitter.com/(.*)'
data set https://nitter.net/$1
plumb to web
plumb start web $data

# include basic plumbing rules
include basic
