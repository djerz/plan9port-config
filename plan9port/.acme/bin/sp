#!/bin/sh

# Spellcheck current Acme buffer
# Enchant and Python needs to be installed on the system
# Supports passing '-d dict' parameter to enchant to use a specific dictionary

set -e

ENCHANTCMD=enchant-2

if ! command -v $ENCHANTCMD >/dev/null 2>&1; then
	9 echo "enchant-2 not installed, trying enchant" 1>&2
	ENCHANTCMD=enchant
	if ! command -v $ENCHANTCMD >/dev/null 2>&1; then
		9 echo "enchant not installed" 1>&2
		exit 1
	fi
fi

if ! command -v python3 >/dev/null 2>&1; then
	echo "python3 not installed" 1>&2
	exit 1
fi

pyrealpath() {
	if [ $# -ne 2 ]; then
		echo 'Usage: pyrealpath PATH START' 1>&2
		exit 2
	fi
	python3 -c "import sys, os.path; sys.stdout.write(os.path.relpath('$1', '$2'))"
}

if [ "$winid" = "" ]; then
	9 echo "must be used from within acme" 1>&2
	exit 1
fi

if [ "$#" -gt 0 ] && ([ "$#" -ne 2 ] || [ "$1" != "-d" ]); then
	9 cat << EOF >&2
Usage: `basename $0` [-d dict]

    If -d is specified, dict must be an \`enchant\` or \`enchant-2\` dictionary
EOF
	exit 1
fi

ENCHANTPARAMS=""
if [ "$1" = "-d" ]; then
	if [ -z "$2" ]; then
		9 echo "option -d specified but no dictionary provided" 1>&2
		exit 1
	fi
	ENCHANTPARAMS="$1 $2"
fi

RELATIVEPATH=`pyrealpath "$samfile" "$PWD"`

{
	set -e
	IFS="
	"
	for l in `9p read acme/$winid/body | LANG=${LANG:-en_US.UTF-8} $ENCHANTCMD $ENCHANTPARAMS -L -a`; do
		if [ -n "`9 echo -n "$l" | 9 grep -e '^[&#]'`" ]; then
			lword=`9 echo -n "$l" | 9 awk '{print $3}'`
			lline=`9 echo -n "$l" | 9 awk '{print $2}'`
			if [ -n "`9 echo -n "$l" | 9 grep -e '^&'`" ]; then  # starts with '&'
				lindex=5
			else                                                 # starts with '#'
				lindex=4
			fi
			lcolumn=`9 echo -n "$l" | 9 awk '{print $'${lindex}'}' | 9 sed -e 's/^([0-9]+).*/\1/'`
			lcolumnstart=`9 hoc -e "$lcolumn + 1"`
			llength=`9 echo -n "$lword" | 9 wc -c`
			lcolumnend=`9 hoc -e "$lcolumnstart + $llength"`
			lsuggest=`9 echo -n "$l" | 9 awk -F':' '{print ":" $2}'`
			9 echo "${RELATIVEPATH}:${lline}:${lcolumnstart},${lline}:${lcolumnend}	$lword $lsuggest"
		fi
	done
}
