#!/bin/sh

# Command to execute (Button2) some text in a specified Acme window
# Example (execute 'Get' in Acme window 8):
#     acmeexec Get 8
# Example (execute 'Indent on' in Acme window 9):
#     acmeexec 'Indent on' 9
# Example (change font to GoRegular anti-aliased at 22pt in calling Acme window):
#     acmeexec 'Font /mnt/font/GoRegular/22a/font'

if [ -z "$winid" ]; then
	echo "Must be run from within Acme" 1>&2
	exit 1
fi

if [ "$#" -eq 0 ] || [ "$#" -gt 2 ]; then
	PROGNAME=`basename $0`
	cat << EOF >&2
Usage: $PROGNAME COMMAND [WINID]

    COMMAND is the text to execute in the Acme window (in quotes as needed)
    WINID is a Acme window id (default: \$winid of current Acme window)
EOF
	exit 1
fi

CMD="$1"
WID=${2:-$winid}

# Store original tag right of first '|'
TAGRIGHT=`9p read acme/$WID/tag | 9 awk -F'|' '{ st = index($0,"|");print substr($0,st+1)}'`
if [ -z "$TAGRIGHT" ]; then
	9 echo 'Error: Unable to parse tag (trying to orient on first "|")' 1>&2
	exit 2
fi

# Disable menu autoupdate while we're trying to execute the given text
# (see https://github.com/9fans/plan9port/blob/master/src/cmd/acme/xfid.c#L809)
9 echo -n "nomenu" | 9p write acme/$WID/ctl

# Text to execute will be appended to the tag, so find its start index
STARTINDEX=`9p read acme/$WID/tag | 9 wc -c | 9 hoc`  # hoc to strip leading spaces

# Append text to execute to tag
9 echo -n "$CMD" | 9p write acme/$WID/tag
CMDLENGTH=`9 echo -n "$CMD" | 9 wc -c`

# Find the end index of the added text and execute the text
ENDINDEX=`9 echo "${STARTINDEX}+${CMDLENGTH}" | 9 hoc`
EVENT="Mx$STARTINDEX $ENDINDEX"
9 echo "$EVENT" | 9p write acme/$WID/event

# Clear tag right of first '|' and restore to the original
9 echo -n "cleartag" | 9p write acme/$WID/ctl
9 echo -n "$TAGRIGHT" | 9p write acme/$WID/tag

# Restore menu autoupdate
9 echo -n "menu" | 9p write acme/$WID/ctl
